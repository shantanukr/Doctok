package jerseydemo;

import java.sql.*;
public class SQL {
    private String user;
    private String password;
    private String table;
    private String db;
    PreparedStatement pstmt;
    Connection conn;
    Statement st;
    public SQL(String user ,String password,String table,String db)
    {  
        this.user=user;
        this.password=password;
        this.table=table;
        this.db=db;
        try {
                Class.forName("com.mysql.jdbc.Driver");
                //String db_url="jdbc:mysql://localhost:3306/"+db;
                //conn=DriverManager.getConnection(db_url,user,password);
                conn=DriverManager.getConnection("jdbc:mysql://aax4njhzb6ip3l.cijaipiacsep.ap-southeast-1.rds.amazonaws.com:3306/doctok?autoReconnect=true&useSSL=false","root","doctalk2019");
            }
        catch(Exception e)
            {
                System.out.println(""+e);
            }
    }
    
    public String get_feverdetails(int diagnosis_id)
    {
    	String temp=null;
    	try {
    		
             	String tempqry="select prevSym_code from diagnosis where diag_id=?";
                 pstmt=conn.prepareStatement(tempqry);
                 pstmt.setInt(1, diagnosis_id);
                 ResultSet rs=pstmt.executeQuery();
                 rs.next();
   
                 temp=rs.getString("prevSym_code");
                 System.out.println(temp);

             }
             catch (Exception e)
             {
                 System.out.println(e);
             }
    	return temp;
    }
    public void insert_user(String name,String emailid,String phone,String dob,String password,String gender)
    {
    	 try
         {
             pstmt=conn.prepareStatement("insert into patient(name,gender,age,ph,email_id,password)values(?,?,?,?,?,?");///????????????????????????
             pstmt.setString(1,name);
             pstmt.setString(2,gender);
             pstmt.setString(3,dob);
             pstmt.setString(4,phone);
             pstmt.setString(5,emailid);
             pstmt.setString(6, password);
             
             pstmt.executeUpdate();
             

         }catch(Exception e)
         {
             System.out.println(e);
         }
    }
    
    
    public void view_user(String emailid)
    {
    	
            try
            {
            	String tempqry="select * from $tablename where email_id=$emailid";
            	 System.out.println("hello");
            	String qry=tempqry.replace("$tablename",this.table);
            	String qry1=qry.replace("$emailid",emailid);
            	 System.out.println("hello");
            	 System.out.println(qry);
            	Class.forName("com.mysql.jdbc.Driver");
                Connection con= DriverManager.getConnection("jdbc:mysql://localhost:3306/doctok","root","");
                Statement stm=con.createStatement();
                
              
                ResultSet rs=stm.executeQuery(qry1);
                rs.next();
  
                String temp=rs.getString("name");
                System.out.println(temp);

            }
            catch (Exception e)
            {
                System.out.println(e);
            }
    }
    
    public void delete_user(String emailid)
    {
    	try
        {
        	String tempqry="delete $tablename where ";
        	String qry=tempqry.replace("$tablename",table);
            pstmt=conn.prepareStatement(qry);
            
            pstmt.setString(1,emailid);

            ResultSet rs=pstmt.executeQuery();
            rs.next();
            String temp=rs.getString("name");
            System.out.println(temp);

        }
        catch (Exception e)
        {
            System.out.println(e);
        }
    }
    
    public void update_user(String emailid)
    {
    	try
        {
        	String tempqry="select * from $tablename where symp_name=?";
        	String qry=tempqry.replace("$tablename",table);
            pstmt=conn.prepareStatement(qry);
            
            pstmt.setString(1,emailid);

            ResultSet rs=pstmt.executeQuery();
            rs.next();
            String temp=rs.getString("name");
            System.out.println(temp);

        }
        catch (Exception e)
        {
            System.out.println(e);
        }
    }
    public void generate_dataset()
    {
    	
    }
    public void update_symptom()
    {

    }
    public void update_grpsymptom()
    {

    }
    public void delete_symptom()
    {

    }
    public void grp_symptom()
    {

    }
    public void generate_grpsymptom()
    {
        //frm dataset generated
    }
    public String[] retrieve_ques_set(int index) {
       String[] str = null;
       int count = 0;
        try {

        		
            pstmt = conn.prepareStatement("select * from questions where id=?");
           // System.out.println("Hi");
            pstmt.setInt(1,index);
            ResultSet rs=pstmt.executeQuery();
            if(rs.last())
            	count=rs.getRow();
            rs.beforeFirst();
            rs.next();
            str=new String[count+1];
            str[0]=rs.getString("qname");
            str[1]=rs.getString("option");
            int i=2;
            while(rs.next())
            {
                str[i++]=rs.getString("option");
            }
            System.out.println("hi");
        }
        catch(Exception e)
        {
         System.out.println(""+e);
        }
        return str;
    }
    public String get_optstring(int index)
    {
    	String s=null;
    	try {
    		pstmt=conn.prepareStatement("Select option from questions where option_code=?");
    		pstmt.setInt(1,index);
    		ResultSet rs=pstmt.executeQuery();
    		rs.next();
    		s=rs.getString("option");
    	}catch(Exception e)
    	{
    		System.out.println(""+e);
    	}
    	
    	return s;
    }
    public String[][] retrieve_exact()//retrieve main table in tablearray
    {
    	String[] str={ "con_id","temp","fever_type", "rashes", "persistent_tachicardia", "running_nose", "chills","vomiting", "urine", "ache", "SoreEyes", "Appetite_loss", "neck_stiffness", "Loose_Motion", "Wt_Loss", "ear_pain", "sneeze", "abdominal", "Breathlessness", "cough", "focal_tenderness", "pain", "Blurred_Vision", "Erruption", "Hoarseness_Voice", "Swelled_Foot"};
      String[][] tablearray=new String[25][str.length];
     try {
        st=conn.createStatement();
        ResultSet rs = st.executeQuery("Select * from exactcon");
       int i=0;
        while(rs.next())
       {
           for(int j=0;j<str.length;j++)
           {
               tablearray[i][j]=rs.getString(str[j]);
           }
           i++;
       }
        //System.out.println("hello");
        
        }
    catch(Exception e)
    {
    System.out.println("hELL YAY!"+e);
    }
        return tablearray;
    }
    

public String[][] retrieve_Sym()
{
	    	String[] str={"symp_id","symp_name"};
	      String[][] tablearray=new String[77][str.length];
	     try {
	        st=conn.createStatement();
	        ResultSet rs = st.executeQuery("Select * from symptom");
	       int i=0;
	       System.out.println("Hello");
	        while(rs.next())
	       {
	           for(int j=0;j<str.length;j++)
	           {
	               tablearray[i][j]=rs.getString(str[j]);
	           }
	           i++;
	       }
	        for(int k=0;i<tablearray.length;i++)
	        {
	        	for(int j=0;j<tablearray[0].length;j++)
	        		System.out.println(tablearray[k][j]);
	        }
	        //System.out.println("hello");
	        }
	    catch(Exception e)
	    {
	    System.out.println("hELL YAY!"+e);
	    }
	        return tablearray;
}

		public String get_conclusion(String conid)
		{
			String con=null;
			try {
				System.out.println("Conclusion ID"+conid);
				pstmt=conn.prepareStatement("select * from conclusion where conclusion_id=?");
				pstmt.setString(1,conid);
				
				ResultSet rs=pstmt.executeQuery();
				while(rs.next())
				{
					con=rs.getString("conclusion_name");
					System.out.println(con);
				}
				
				
			}catch(Exception e)
			{
				System.out.println(e);
			}
			
			return con;
		}
		public boolean check_feverdata()
		{
			SQL sql=new SQL("root","","fever","doctok");
			int code[] = new int[100];
			int count=0;
			int i=0;
			try {
		 st=conn.createStatement();  
			ResultSet rs=st.executeQuery("select distinct type from fever");
			
			while(rs.next())  
			{
			    code[i++] = rs.getInt(1);
			 //   System.out.println(code[i-1]);  
			    	count++;
			}
			if(count==0)
				return false;
		

			//con.close();  
			i=0;
			Statement stmt1=conn.createStatement();  
			ResultSet rs1=stmt1.executeQuery("select pid from diagnosis");  
			while(rs1.next())  
			{
			    int pid=rs1.getInt(1);
			    System.out.println("Pid:"+rs1.getInt(1));  
			      PreparedStatement Stmt2 = conn.prepareStatement("update diagnosis set prevSym_code = ? where pid=?");
			      Stmt2.setInt(1, code[i++]);
			      Stmt2.setInt(2, pid);
			      Stmt2.executeUpdate();
			     // con.close();
			    //System.out.println(rs.getInt(1));  

			}
			
			}catch(Exception e){ System.out.println(e);}  

			  
			  
			return true;
		}
		
		
	public void insertRef(String [][]refer)
	{
		int n;
		try{
			 st=conn.createStatement();
			 String sql = "DELETE FROM referindex";
			 st.executeUpdate(sql);
            for(int i=0;i<refer.length;i++) {
            		n=Integer.parseInt(refer[i][0]);
                    pstmt = conn.prepareStatement("insert into referindex(con_id,temp,fever_type, rashes, persistent_tachicardia, running_nose, chills,vomiting, urine, ache, SoreEyes, Appetite_loss, neck_stiffness, Loose_Motion, Wt_Loss, ear_pain, sneeze, abdominal, Breathlessness, cough, focal_tenderness, pain, Blurred_Vision, Erruption, Hoarseness_Voice, Swelled_Foot)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    pstmt.setInt(1,n);
                    pstmt.setString(2,refer[i][1]);
                    pstmt.setString(3,refer[i][2]);
                    pstmt.setString(4,refer[i][3]);
                    pstmt.setString(5,refer[i][4]);
                    pstmt.setString(6,refer[i][5]);
                    pstmt.setString(7,refer[i][6]);
                    pstmt.setString(8,refer[i][7]);
                    pstmt.setString(9,refer[i][8]);
                    pstmt.setString(10,refer[i][9]);
                    pstmt.setString(11,refer[i][10]);
                    pstmt.setString(12,refer[i][11]);
                    pstmt.setString(13,refer[i][12]);
                    pstmt.setString(14,refer[i][13]);
                    pstmt.setString(15,refer[i][14]);
                    pstmt.setString(16,refer[i][15]);
                    pstmt.setString(17,refer[i][16]);
                    pstmt.setString(18,refer[i][17]);
                    pstmt.setString(19,refer[i][18]);
                    pstmt.setString(20,refer[i][19]);
                    pstmt.setString(21,refer[i][20]);
                    pstmt.setString(22,refer[i][21]);
                    pstmt.setString(23,refer[i][22]);
                    pstmt.setString(24,refer[i][23]);
                    pstmt.setString(25,refer[i][24]);
                    pstmt.setString(26,refer[i][25]);
                    
                    
                    pstmt.executeUpdate();
                }

            }catch(Exception e)
        {
            System.out.println(e);
        }
	}
	
	public String[][] retrieve_refer()//retrieve main table in tablearray
    { SQL sql=new SQL("root","","count","doctok");
		int count=sql.retrievecount();
		System.out.println("Count: "+count);
    	String[] str={ "con_id","temp","fever_type", "rashes", "persistent_tachicardia", "running_nose", "chills","vomiting", "urine", "ache", "SoreEyes", "Appetite_loss", "neck_stiffness", "Loose_Motion", "Wt_Loss", "ear_pain", "sneeze", "abdominal", "Breathlessness", "cough", "focal_tenderness", "pain", "Blurred_Vision", "Erruption", "Hoarseness_Voice", "Swelled_Foot"};
      String[][] tablearray=new String[count][str.length];
     try {
        st=conn.createStatement();
        ResultSet rs = st.executeQuery("Select * from referindex");
       int i=0;
        while(rs.next()&&count!=0)
       {
           for(int j=0;j<str.length;j++)
           {
               tablearray[i][j]=rs.getString(str[j]);
           }
           i++;
           count--;
       }
        //System.out.println("hello");
        
        }
    catch(Exception e)
    {
    System.out.println("hELL YAY! count problem"+e);
    }
        return tablearray;
    }
	
	public int retriveflag()
	{
		 int flag=0;
		try {
	        st=conn.createStatement();
	        ResultSet rs = st.executeQuery("Select * from flag");
	      
	        while(rs.next())
	       {
	          flag=rs.getInt("val");
	       }
	        
	    }catch(Exception e)
	    {
	    System.out.println("hELL YAY!"+e);
	    }
			return flag;
	}
	
	public void insertflag(int n)
	{
		try{
		      
			 st=conn.createStatement();
			 String sql = "DELETE FROM flag";
			 st.executeUpdate(sql);
                    pstmt = conn.prepareStatement("insert into flag(val)values(?)");
                    pstmt.setInt(1,n);
                    pstmt.executeUpdate();
                
            }catch(Exception e)
        {
            System.out.println(e);
        }
	}
	public void deleteindex()
	{
		try{
		      
			 st=conn.createStatement();
			 String sql = "DELETE FROM ind";
			 st.executeUpdate(sql);
               
           }catch(Exception e)
       {
           System.out.println(e);
       }
	}
	public void insertindex(int i)
	{
		try{
		      
			 st=conn.createStatement();
			 String sql = "DELETE FROM ind";
			 st.executeUpdate(sql);
                    pstmt = conn.prepareStatement("insert into ind(val)values(?)");
                    pstmt.setInt(1,i);
                    pstmt.executeUpdate();
                   
                   st=conn.createStatement();
       			 String sql1 = "DELETE FROM getind";
       			 st.executeUpdate(sql1);
                           pstmt = conn.prepareStatement("insert into getind(id)values(?)");
                           pstmt.setInt(1,i);
                           pstmt.executeUpdate();
                
            }catch(Exception e)
        {
            System.out.println(e);
        }
	}
	
	public int retrievecount()
	{
		 int count=0;
		try {
	        st=conn.createStatement();
	        ResultSet rs = st.executeQuery("Select * from count");
	      
	        while(rs.next())
	       {
	          count=rs.getInt("val");
	       }
	        
	    }catch(Exception e)
	    {
	    System.out.println("hELL YAY!"+e);
	    }
			return count;
	}
	public void insertcount(int n)
	{
		try{
		      
			 st=conn.createStatement();
			 String sql = "DELETE FROM count";
			 st.executeUpdate(sql);
                    pstmt = conn.prepareStatement("insert into `count`(val)values(?)");
                    pstmt.setInt(1,n);
                    pstmt.executeUpdate();
                    
                    
                
            }catch(Exception e)
        {
            System.out.println(e);
        }
	}
	
	public int retriveindex()
	{
		 String index=null;
		 int ind=26;//denoting the no questions left to be asked or no question has got positive wait.
		try {
	        st=conn.createStatement();
	        ResultSet rs = st.executeQuery("Select * from ind");
	        
	        while(rs.next())
	       {
	          index=rs.getString("val");
	       }
			 ind=Integer.parseInt(index); 
	        
	    }catch(Exception e)
	    {
	    System.out.println("hELL YAY!"+e);
	    }
			
		return ind;
	}
	public int getretriveindex()
	{   int ind=-1;
	
		try {
			 String index=null;
			 int indian=0;
			 //denoting the no questions left to be asked or no question has got positive wait.
	        st=conn.createStatement();
	        ResultSet rs = st.executeQuery("Select * from getind"); 
	        while(rs.next())
	       {
	          index=rs.getString("id");
	       }
	        
			 if(!rs.wasNull())
				{
					indian=Integer.parseInt(index);
					
				}
				else 
				{	
					indian=26;
				}
			   String sql1 = "DELETE FROM getind";
				 st.executeUpdate(sql1);
	        ind=indian;
	    }
		catch(Exception e)
	    {
	    System.out.println("hELL YAY!"+e);
	    }
			
		return ind;
	}
	public int retriveindex1()
	{
		 int index1=0;
		try {
	        st=conn.createStatement();
	        ResultSet rs = st.executeQuery("Select * from ind1");
	      
	        while(rs.next())
	       {
	          index1=rs.getInt("val");
	       }
	        
	    }catch(Exception e)
	    {
	    System.out.println("hELL YAY!"+e);
	    }
			return index1;
	}
	
	public void insertindex1(int i)
	{
		try{
		      
			 st=conn.createStatement();
			 String sql = "DELETE FROM ind1";
			 st.executeUpdate(sql);
                    pstmt = conn.prepareStatement("insert into ind1(val)values(?)");
                    pstmt.setInt(1,i);
                    pstmt.executeUpdate();
                
            }catch(Exception e)
        {
            System.out.println(e);
        }
	}
	
	
	public void insertques_set(String [] question_set)
	{
		try{
		      System.out.println("new one");
			 st=conn.createStatement();
			 String sql = "DELETE FROM ques_set";
			 String sql1 = "DELETE FROM CONC_JSON";
			 st.executeUpdate(sql);
			 st.executeUpdate(sql1);
			 
			 int len=question_set.length;
			 for(int i=0;i<question_set.length;i++)
			 {
				 pstmt = conn.prepareStatement("insert into ques_set(question_set)values(?)");
                 pstmt.setString(1,question_set[i]);
                 
                 pstmt.executeUpdate();
			 }
               
           }catch(Exception e)
       {
           System.out.println(e);
       }
	}
	
	public void insertCon(String con)
	{
		try{
		      
			 st=conn.createStatement();
			 String sql = "DELETE FROM CONC_JSON";
			 String sql1 = "DELETE FROM ques_set";
			 st.executeUpdate(sql);
			st.executeUpdate(sql1);
				pstmt = conn.prepareStatement("insert into conc_json(conclusion)values(?)");
                pstmt.setString(1,con);
                pstmt.executeUpdate();
              
          }catch(Exception e)
      {
          System.out.println(e);
      }
	}
	
	public String[] getques_set()
	{
		String []ques_set;
		  ques_set=new String[100];
		int size=0; 
		int i=0;
		try {
			st=conn.createStatement();
	        ResultSet rs = st.executeQuery("select * from ques_set");
	    
	        while(rs.next())
	       {
	          ques_set[i++]=rs.getString("question_set");
	       }
	        return ques_set;
			
		}catch(Exception e)
		{
			System.out.println(e);
			return null;
		}
		
		
	}
	
	public String getCon()
	{
		String con=null;
		try {
			st=conn.createStatement();
	        ResultSet rs = st.executeQuery("select * from conc_json");
	        while(rs.next())
	       {
	          con=rs.getString("conclusion");
	       }
			
		}catch(Exception e)
		{
			System.out.println(e);
		}
		
		return con;
	}
	//////////////////////////////////////////////
	public void insert_index1(int index1)
	{
		
		try{
			String sql1 = "DELETE FROM index1";
			 st.executeUpdate(sql1);
		     pstmt = conn.prepareStatement("insert into index1(ind1)values(?)");
             pstmt.setInt(1,index1);
             pstmt.executeUpdate();
             
         }
		catch(Exception e)
		{
         System.out.println(e);
		}
	}
	
	public int retrieve_index1()
	{
		int index1=0;
		try {
			
			st=conn.createStatement();
	        ResultSet rs = st.executeQuery("select * from index1");
	        while(rs.next())
	       {
	          index1=rs.getInt("ind1");
	       }
			
		}catch(Exception e)
		{
			System.out.println(e);
		}
		
		return index1;
	}
	
		public static void main(String args[])
		{
			SQL sql=new SQL("root","","diagnosis","doctok");
			//sql.get_feverdetails(1);
			sql.getques_set();
			System.out.println(sql.check_feverdata());
		}
		
	}


